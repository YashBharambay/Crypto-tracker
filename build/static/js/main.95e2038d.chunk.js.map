{"version":3,"sources":["Coin.jsx","Themes.jsx","App.jsx","index.js"],"names":["Coin","name","image","symbol","price","volume","priceChange","className","src","alt","Crypto","toLocaleString","toFixed","lightTheme","body","fontColor","darkTheme","GlobalStyles","createGlobalStyle","props","theme","StyledApp","styled","div","CoinSearch","form","App","useState","coins","setCoins","search","setSearch","setTheme","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","coin","toLowerCase","includes","onClick","clasName","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","id","ReactDOM","render","document","getElementById"],"mappings":"oOA2BeA,EAzBF,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,OAAQC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAClD,OACE,mCACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKN,EAAOO,IAAKC,SACtB,6BAAKT,IACL,mBAAGM,UAAU,cAAb,SAA4BJ,OAE9B,sBAAKI,UAAU,YAAf,UACE,oBAAGA,UAAU,aAAb,cAA4BH,KAC5B,oBAAGG,UAAU,cAAb,cAA6BF,EAAOM,oBACnCL,EAAc,EACb,oBAAGC,UAAU,mBAAb,UAAiCD,EAAYM,QAAQ,GAArD,OAEA,oBAAGL,UAAU,qBAAb,UAAmCD,EAAYM,QAAQ,GAAvD,kB,qBChBDC,EAAa,CACxBC,KAAM,QACNC,UAAW,SAGAC,EAAY,CACvBF,KAAM,UACNC,UAAW,SAGAE,EAAeC,YAAH,oEAEH,SAACC,GAAD,OAAWA,EAAMC,MAAMN,QCLvCO,EAAYC,IAAOC,IAAV,wGACJ,SAACJ,GAAD,OAAWA,EAAMC,MAAML,aAK5BS,EAAaF,IAAOG,KAAV,iDA2EDC,EAvEH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEYF,mBAAS,IAFrB,mBAETG,EAFS,KAEDC,EAFC,OAGUJ,mBAAS,QAHnB,mBAGTP,EAHS,KAGFY,EAHE,KAShBC,qBAAU,WACRC,IACGC,IACC,2HAEDC,MAAK,SAACC,GACLR,EAASQ,EAAIC,SAGdC,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,SAMlC,IAAMG,EAAgBf,EAAMgB,QAC1B,SAACC,GAAD,OAAUA,EAAK5C,KAAK6C,cAAcC,SAASjB,EAAOgB,kBAIpD,OACE,eAAC,IAAD,CAAe1B,MAAiB,UAAVA,EAAoBP,EAAaG,EAAvD,UACE,cAACC,EAAD,IAEA,cAACI,EAAD,UACE,sBAAKd,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,wBAAQyC,QAAS,WA9BLhB,EAAV,UAAVZ,EAA6B,OAAmB,UA8BxC,0BAEA,oBAAI6B,SAAS,YAAb,+BACA,cAACzB,EAAD,UACE,+BACE,uBACE0B,KAAK,OACLC,YAAY,oBACZ5C,UAAU,aACV6C,SAAU,SAACC,GAAD,OAAOtB,EAAUsB,EAAEC,OAAOC,cAI1C,mBAAGhD,UAAU,YAAb,kCAGDoC,EAAca,KAAI,SAACX,GAClB,OACE,cAAC,EAAD,CAEE5C,KAAM4C,EAAK5C,KACXC,MAAO2C,EAAK3C,MACZC,OAAQ0C,EAAK1C,OACbE,OAAQwC,EAAKY,WACbrD,MAAOyC,EAAKa,cACZpD,YAAauC,EAAKc,6BANbd,EAAKe,gBCpE1BC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.95e2038d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Coin = ({ name, image, symbol, price, volume, priceChange }) => {\r\n  return (\r\n    <>\r\n      <div className=\"coin-container\">\r\n        <div className=\"coin-row\">\r\n          <div className=\"coin\">\r\n            <img src={image} alt={Crypto}></img>\r\n            <h1>{name}</h1>\r\n            <p className=\"coin-symbol\">{symbol}</p>\r\n          </div>\r\n          <div className=\"coin-data\">\r\n            <p className=\"coin-price\">${price}</p>\r\n            <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n            {priceChange < 0 ? (\r\n              <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\r\n            ) : (\r\n              <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Coin;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const lightTheme = {\r\n  body: \"white\",\r\n  fontColor: \"black\",\r\n};\r\n\r\nexport const darkTheme = {\r\n  body: \"#1a1a1a\",\r\n  fontColor: \"white\",\r\n};\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\t* {\r\n\t\tbackground-color: ${(props) => props.theme.body};\r\n\t}\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Coin from \"./Coin.jsx\";\nimport \"./App.css\";\nimport \"./coin.css\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./Themes.jsx\";\n// import { DarkModeSwitch } from \"react-toggle-dark-mode\";\n\nconst StyledApp = styled.div`\n  color: ${(props) => props.theme.fontColor};\n  /* fontColor: \"white\"; */\n  /* backgroundColor:'red; */\n`;\n\nconst CoinSearch = styled.form`\n  background: blue;\n`;\n\nconst App = () => {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [theme, setTheme] = useState(\"dark\");\n\n  const themeToggler = () => {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=INR&order=market_cap_desc&per_page=30&page=1&sparkline=false\"\n      )\n      .then((res) => {\n        setCoins(res.data);\n        // console.log(res.data);\n      })\n      .catch((error) => console.log(error));\n  });\n\n  // const puta = (e) => {\n  //   setSearch(e.target.value);\n  // };\n  const filteredCoins = coins.filter(\n    (coin) => coin.name.toLowerCase().includes(search.toLowerCase())\n    // console.log(\"filteredCoins\", { coin });\n  );\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <GlobalStyles />\n\n      <StyledApp>\n        <div className=\"coin-app\">\n          <div className=\"coin-search\">\n            <button onClick={() => themeToggler()}>Change Theme</button>\n\n            <h1 clasName=\"coin-text\">Search A Currency</h1>\n            <CoinSearch>\n              <form>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search A Currency\"\n                  className=\"coin-input\"\n                  onChange={(e) => setSearch(e.target.value)}\n                ></input>\n              </form>\n            </CoinSearch>\n            <p className=\"developer\">Developed By Yash</p>\n          </div>\n\n          {filteredCoins.map((coin) => {\n            return (\n              <Coin\n                key={coin.id}\n                name={coin.name}\n                image={coin.image}\n                symbol={coin.symbol}\n                volume={coin.market_cap}\n                price={coin.current_price}\n                priceChange={coin.price_change_percentage_24h}\n              />\n            );\n          })}\n        </div>\n      </StyledApp>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App.jsx';\n\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}